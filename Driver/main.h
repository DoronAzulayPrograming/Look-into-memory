#pragma once
#include "stdafx.h"

NTKERNELAPI
NTSTATUS
IoCreateDriver(
	_In_ PUNICODE_STRING DriverName, OPTIONAL
	_In_ PDRIVER_INITIALIZE InitializationFunction
);

_Dispatch_type_(IRP_MJ_DEVICE_CONTROL)
DRIVER_DISPATCH DevioctlDispatch;
_Dispatch_type_(IRP_MJ_CREATE)
DRIVER_DISPATCH CreateDispatch;
_Dispatch_type_(IRP_MJ_CLOSE)
DRIVER_DISPATCH CloseDispatch;

_Dispatch_type_(IRP_MJ_CREATE)
_Dispatch_type_(IRP_MJ_CREATE_NAMED_PIPE)
_Dispatch_type_(IRP_MJ_CLOSE)
_Dispatch_type_(IRP_MJ_READ)
_Dispatch_type_(IRP_MJ_WRITE)
_Dispatch_type_(IRP_MJ_QUERY_INFORMATION)
_Dispatch_type_(IRP_MJ_SET_INFORMATION)
_Dispatch_type_(IRP_MJ_QUERY_EA)
_Dispatch_type_(IRP_MJ_SET_EA)
_Dispatch_type_(IRP_MJ_FLUSH_BUFFERS)
_Dispatch_type_(IRP_MJ_QUERY_VOLUME_INFORMATION)
_Dispatch_type_(IRP_MJ_SET_VOLUME_INFORMATION)
_Dispatch_type_(IRP_MJ_DIRECTORY_CONTROL)
_Dispatch_type_(IRP_MJ_FILE_SYSTEM_CONTROL)
_Dispatch_type_(IRP_MJ_DEVICE_CONTROL)
_Dispatch_type_(IRP_MJ_INTERNAL_DEVICE_CONTROL)
_Dispatch_type_(IRP_MJ_SHUTDOWN)
_Dispatch_type_(IRP_MJ_LOCK_CONTROL)
_Dispatch_type_(IRP_MJ_CLEANUP)
_Dispatch_type_(IRP_MJ_CREATE_MAILSLOT)
_Dispatch_type_(IRP_MJ_QUERY_SECURITY)
_Dispatch_type_(IRP_MJ_SET_SECURITY)
_Dispatch_type_(IRP_MJ_POWER)
_Dispatch_type_(IRP_MJ_SYSTEM_CONTROL)
_Dispatch_type_(IRP_MJ_DEVICE_CHANGE)
_Dispatch_type_(IRP_MJ_QUERY_QUOTA)
_Dispatch_type_(IRP_MJ_SET_QUOTA)
_Dispatch_type_(IRP_MJ_PNP)
DRIVER_DISPATCH UnsupportedDispatch;

DRIVER_INITIALIZE DriverInitialize;
DRIVER_INITIALIZE DriverEntry;
#pragma alloc_text(INIT, DriverEntry)

#define SM_CTL_OPEN_PROCESS						 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0701, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_SUSPENDP_PROCESS					 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0702, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_RESUME_PROCESS					 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0703, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_QUERY_SYSTEM_INFORMATION_EX	     CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0704, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_QUERY_INFORMATION_PROCESS		 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0705, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_SET_INFORMATION_PROCESS			 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0706, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_FLUSH_INSTRUCTION_CACHE			 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0707, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_ALLOCATE_VIRTUAL_MEMORY			 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0708, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_FLUSH_VIRTUAL_MEMORY				 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0709, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_FREE_VIRTUAL_MEMORY				 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0710, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_LOCK_VIRTUAL_MEMORY				 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0711, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_UNLOCK_VIRTUAL_MEMORY			 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0712, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_PROTECT_VIRTUAL_MEMORY			 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0713, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_READ_VIRTUAL_MEMORY				 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0714, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_WRITE_VIRTUAL_MEMORY				 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0715, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_QUERY_VIRTUAL_MEMORY				 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0716, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_OPEN_THREAD						 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0717, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_QUERY_INFORMATION_THREAD			 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0718, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_SET_INFORMATION_THREAD			 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0719, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_GET_CONTEXT_THREAD				 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0720, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_SET_CONTEXT_THREAD				 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0721, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_RESUME_THREAD					 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0722, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_SUSPENDP_THREAD					 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0723, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_WAIT_FOR_SINGLE_OBJECT			 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0724, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_QUERY_VIRTUAL_MEMORY1			 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0725, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_SYSTEM_PROCESS_INFORMATION		 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0726, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_IS_WOW64_PROCESS					 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0727, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_QUERY_SYSTEM_INFORMATION			 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0728, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_SNAP_SHOT_PROCESS_MODULES		 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0731, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_GET_PROCESS_MODULES				 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0732, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_MMCOPY_VM						 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0733, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_TERMINATE_PROCESS				 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0734, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)

#define SM_CTL_OPEN_OBJECT						 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0735, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define SM_CTL_CLOSE_OBJECT						 CTL_CODE(FILE_DEVICE_UNKNOWN, 0x0736, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)

typedef struct _SMNTDEFS {
	ObCloseObjectByPointer_ARGS obCloseObjectByPointer_args;
	ObOpenObjectByPointer_ARGS obOpenObjectByPointer_args;
	NTTERMINATEPROCESS_ARGS terminate_process_args;
	NTMMCOPYVM_ARGS mm_copy_vm_args;
	ISWOW64PROCESS_ARGS is_wow64_process;
	GETPROCESSMODULES_ARGS get_process_modules;
	SNAPSHOTPROCESSMODULES_ARGS snap_shot_process_modules;
	SYSTEM_PROCESS_INFORMATION* system_information_process;
	NTOPENPROCESS_ARGS open_process_args;
	NTSUSPENDPROCESS_ARGS suspend_process_args;
	NTRESUMEPROCESS_ARGS resume_process_args;
	NTQUERYSYSTEMINFORMATION_ARGS querySystemInformation_args;
	NTQUERYSYSTEMINFORMATIONEX_ARGS querySystemInformationEx_args;
	NTQUERYINFORMATIONPROCESS_ARGS queryInformationProcess_args;
	NTSETINFORMATIONPROCESS_ARGS setInformationProcess_args;
	NTFLUSHINSTRUCTIONCACHE_ARGS flushInstructioncache_args;
	NTALLOCATEVIRTUALMEMORY_ARGS allocateVirtualMemory_args;
	NTFLUSHVIRTUALMEMORY_ARGS flushVirtualMemory_args;
	NTFREEVIRTUALMEMORY_ARGS freeVirtualMemory_args;
	NTLOCKVIRTUALMEMORY_ARGS lockVirtualMemory_args;
	NTUNLOCKVIRTUALMEMORY_ARGS unlockVirtualMemory_args;
	NTPROTECTVIRTUALMEMORY_ARGS protectVirtualMemory_args;
	NTREADVIRTUALMEMORY_ARGS readVirtualMemory_args;
	NTWRITEVIRTUALMEMORY_ARGS writeVirtualMemory_args;
	NTQUERYVIRTUALMEMORY_ARGS queryVirtualMemory_args;
	NTOPENTHREAD_ARGS open_thread_args;
	NTQUERYINFORMATIONTHREAD_ARGS queryInformationThread_args;
	NTSETINFORMATIONTHREAD_ARGS setInformationThread_args;
	NTGETCONTEXTTHREAD_ARGS getContextThread_args;
	NTSETCONTEXTTHREAD_ARGS setContextThread_args;
	NTRESUMETHREAD_ARGS resume_thread_args;
	NTSUSPENDTHREAD_ARGS suspend_thread_args;
	NTWAITFORSINGLEOBJECT_ARGS waitForSingleObject_thread_args;
} SMNTDEFS, * PSMNTDEFS;

